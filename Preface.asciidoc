[preface]
== Preface

I wrote this book to tell you about simple and powerful technology that has been used with success in the enterprise for many years and starts to be used in new environments like the Web and mobile devices.
This technology is messaging. It has been one of the buildings block that let heterogeneous services and platforms communicate with each other.

=== Messaging is Simple

At its core, the messaging concepts are simple: an application _sends_ a _message_ to a _destination_. Independently, another application subscribes to this destination to
_consume_ the message.

In two sentences, I introduced the four concepts that are *all* there is to know about messaging:

* a _message_ is the data that are exchanged between applications
* a _destination_ is the entity that will handle the messages and distribute them
* a _sender_ is an application that sends _messages_ *to* a _destination_
* a _consumer_ is an application that consume _messages_ *from* a _destination_

The simplicity of messaging can be deceiving but it's this simplicity that allows to use it in powerful, sometimes complex ways.

=== Enterprise Messaging Is Not So Simple

Entreprise applications have long been using messaging technology.

When companies are acquired or merged, they need  a way to enable communication between their systems. Messaging is one approach to achieve this.
The systems must agree on the data representation (transmitted by the _message_) and the _destination_ (or the topic of interest shared by the different systems).

One key aspect of messaging is to be loosely-coupled: the sender and consumer know nothing of each other. When one application sends a message, it has no knowledge on
when or where the message will be consumed and whom will consume it.
Likewise, when an application consumes a message, it does not know which application sends it.

With its use in entreprise software, messaging technology and their underlying protocols became increasingly complex to adapt to entreprise requirements (high-availability, failover, load-balancing).

=== Mobile Messaging Is Simple Again

With the advent of mobile devices, there are a new set of applications (both native and Web-based)  

=== What's in This Book

Chapter 1, Messaging concepts::
In this chapter, I introduce the concepts of messaging protocols, how they differ from request/reply protocols such as HTTP.

Chapter 2, Example Application::
In this chapter, we present the application that will be built all along the book, the _Truck Tracker_. +
To illustrate the use of messaging protocols on mobile and Web platforms, we will build an application with 2 parts: one will
run in mobile devices, the other inside a Web browser and they will communicate using messages. This chapter explains the overall design of this application.

Chapter 3, Mobile Messaging::
We introduce the use of messaging protocols for mobile platforms, how they are well suited to adapt to the mobile constraints.

Chapter 4, STOMP::
In this chapter, we introduce STOMP, a simple text-based messaging protocols and present the protocol features using telnet clients to send and receive messages.

Chapter 5, STOMP Example::
We write the mobile part of the example application on iOS. We introduce StompKit, an Objective-C client for STOMP that will be used to send geolocation data and receives
data.

Chapter 6, MQTT::
In this chapter, we introduce MQTT, a binary messaging protocols well suited to broadcast data from mobile or embedded devices.

Chapter 7, MQTT Example::
We write a simple MQTT application.

Chapter 8, Web Messaging::
In this chapter, we present the challenges that the Web face to build reactive applications and how the messaging protocols can help build them thanks to recent developments
in the Web Browsers space.

Chapter 9, HTML5 Web Sockets::
We present the Web Sockets protocol and API that allows bidirectional communication between a Web browser and a Web server. The Web Sockets are the foundation that allows
to use messaging protocols from the Web browser.

Chapter 10, STOMP Over Web Sockets::
In this chapter, we introduce stomp.js, a JavaScript client for STOMP, that allows to send and receive messages from a Web browser.

Chapter 11, STOMP Over Web Sockets Example::
We will write a Web application that uses stomp.js to receive the geolocation data sent by the mobile application from Chapter 5 and send orders to them.

Chapter 12, MQTT Over Web Sockets::
In this chapter, we write a simple Web application that sends and receives messages using MQTT.

Appendix A, ActiveMQ::
In this appendix, we explain how to install and configure the messaging broker, Apache ActiveMQ, that is used all along the book to run the examples.

.What Should I Read?
[NOTE]
====
The book is organized to be read in the order but some chapters can be skipped depending on your experience.
We suggest to start with the Chapter 1 that introduces all the conceptes discussed throughout the book.

If you are interested to write mobile applications, you can focus on Chapters 3, 4, 5, and 6.
If you are writing Web applictaions, the Chapters 8, 0, 10, 11, and 12 are the most relevant.

If you want to compare different messaging protocols, you might read the Chapters 4 and 6 first.
====

=== Adminstrative Notes

This book is an introduction to the messaging protocols and assumes to prior experience with them.
This books explains in details the messaging protocols. Each platform's clients may provide a different API to deal with the protocol but the underlying concepts
will remain the same.

Basic programming skills are required. The examples in the book runs on different platforms and we used the programming language that made the most sense for each of them.
To build a mobile application on iOS, we wrote the example using Objective-C. The Web application uses the JavaScript language.

The examples can all be downloaded from the https://github.com/mobile-web-messaging/book/[book's GitHub repository].

=== Conventions Used in This Book

The following typographical conventions are used in this book:

_Italic_:: Indicates new terms, URLs, email addresses, filenames, and file extensions.

+Constant width+:: Used for program listings, as well as within paragraphs to refer to program elements such as variable or function names, databases, data types, environment variables, statements, and keywords.

**`Constant width bold`**:: Shows commands or other text that should be typed literally by the user.

_++Constant width italic++_:: Shows text that should be replaced with user-supplied values or by values determined by context.


[TIP]
====
This icon signifies a tip, suggestion, or general note.
====

[WARNING]
====
This icon indicates a warning or caution.
====

=== Using Code Examples
++++
<remark>PROD: Please reach out to author to find out if they will be uploading code examples to oreilly.com or their own site (e.g., GitHub). If there is no code download, delete this whole section.</remark>
++++

Supplemental material (code examples, exercises, etc.) is available for download at link:$$http://examples.oreilly.com/<ISBN>-files/$$[].

This book is here to help you get your job done. In general, if example code is offered with this book, you may use it in your programs and documentation. You do not need to contact us for permission unless you’re reproducing a significant portion of the code. For example, writing a program that uses several chunks of code from this book does not require permission. Selling or distributing a CD-ROM of examples from O’Reilly books does require permission. Answering a question by citing this book and quoting example code does not require permission. Incorporating a significant amount of example code from this book into your product’s documentation does require permission.

We appreciate, but do not require, attribution. An attribution usually includes the title, author, publisher, and ISBN. For example: “_Book Title_ by Some Author (O’Reilly). Copyright 2012 Some Copyright Holder, 978-0-596-xxxx-x.”

If you feel your use of code examples falls outside fair use or the permission given above, feel free to contact us at pass:[<email>permissions@oreilly.com</email>].

=== Safari® Books Online

[role = "safarienabled"]
[NOTE]
====
pass:[<ulink role="orm:hideurl:ital" url="http://my.safaribooksonline.com/?portal=oreilly">Safari Books Online</ulink>] is an on-demand digital library that delivers expert pass:[<ulink role="orm:hideurl" url="http://www.safaribooksonline.com/content">content</ulink>] in both book and video form from the world&#8217;s leading authors in technology and business.
====

Technology professionals, software developers, web designers, and business and creative professionals use Safari Books Online as their primary resource for research, problem solving, learning, and certification training.

Safari Books Online offers a range of pass:[<ulink role="orm:hideurl" url="http://www.safaribooksonline.com/subscriptions">product mixes</ulink>] and pricing programs for pass:[<ulink role="orm:hideurl" url="http://www.safaribooksonline.com/organizations-teams">organizations</ulink>], pass:[<ulink role="orm:hideurl" url="http://www.safaribooksonline.com/government">government agencies</ulink>], and pass:[<ulink role="orm:hideurl" url="http://www.safaribooksonline.com/individuals">individuals</ulink>]. Subscribers have access to thousands of books, training videos, and prepublication manuscripts in one fully searchable database from publishers like O’Reilly Media, Prentice Hall Professional, Addison-Wesley Professional, Microsoft Press, Sams, Que, Peachpit Press, Focal Press, Cisco Press, John Wiley & Sons, Syngress, Morgan Kaufmann, IBM Redbooks, Packt, Adobe Press, FT Press, Apress, Manning, New Riders, McGraw-Hill, Jones & Bartlett, Course Technology, and dozens pass:[<ulink role="orm:hideurl" url="http://www.safaribooksonline.com/publishers">more</ulink>]. For more information about Safari Books Online, please visit us pass:[<ulink role="orm:hideurl" url="http://www.safaribooksonline.com/">online</ulink>].

=== How to Contact Us

Please address comments and questions concerning this book to the publisher:

++++
<simplelist>
<member>O’Reilly Media, Inc.</member>
<member>1005 Gravenstein Highway North</member>
<member>Sebastopol, CA 95472</member>
<member>800-998-9938 (in the United States or Canada)</member>
<member>707-829-0515 (international or local)</member>
<member>707-829-0104 (fax)</member>
</simplelist>
++++

We have a web page for this book, where we list errata, examples, and any additional information. You can access this page at link:$$http://www.oreilly.com/catalog/<catalog page>$$[].

++++
<remark>Don't forget to update the link above.</remark>
++++

To comment or ask technical questions about this book, send email to pass:[<email>bookquestions@oreilly.com</email>].

For more information about our books, courses, conferences, and news, see our website at link:$$http://www.oreilly.com$$[].

Find us on Facebook: link:$$http://facebook.com/oreilly$$[]

Follow us on Twitter: link:$$http://twitter.com/oreillymedia$$[]

Watch us on YouTube: link:$$http://www.youtube.com/oreillymedia$$[]

=== Acknowledgments

++++
<remark>Fill in...</remark>
++++

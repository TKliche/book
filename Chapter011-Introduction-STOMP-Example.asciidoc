[[ch_introduction_stomp_example]]
=== +Locations+ Application Using STOMP

Suppose that we work for a delivery company that uses a fleet of trucks to deliver packages to its clients.

Each truck is responsible for the delivery of packages and they receive orders from their headquarters. To manage efficiently all the trucks, the company headquarters want to monitor the truck's positions and be able to send them orders on-the-go.

We will build a very simple application named +Locations+ that looks similar to this example.

The "truck" will use an iOS application to broadcast the device's geolocation data using its GPS sensor and display text messages that it receives from the headquarters. The "headquarters" will use a Web application to display the locations of all the "trucks" on a map. it will also be used to send text messages to a given truck on their devices:

. In <<ch_mobile_stomp>>, we will write the +Locations+ iOS application using the STOMP protocol to send GPS data and receive text from an iOS device.
. In <<ch_web_stomp>>, we will write the Web application using STOMP protocol over Web Sockets to receive GPS data in a Web browser and send text to the devices.

[[img_example_app_1]]
.Diagram of the +Locations+ application with two devices, +AAA+ and +BBB+, and two web applications.
image::images/Chapter011/stomp_app_diagram_1.png["Diagram of the Locations application with two devices, AAA and BBB, and two web applications"]

Before introducing STOMP, the messaging protocol that will be used by the application, we can already define the application's messaging models and how the different parts of the application will exchange messages.

[[ch_introduction_stomp_example_topology]]
==== +Locations+ Messaging Models

In this application, we will use two destinations, one with a Publish/Subscribe model to broadcast the device GPS data and one with a Point-to-Point model for the text messages:

* +device.XXX.location+ is the _topic_ to broadcast its GPS geolocation data where +XXX+ is the device identifier (Publish/Subscribe model) 
* +device.XXX.text+ is the _queue_ to receive simple text message  (Point-to-Point model)

A topic is used to send the GPS data as this allows potentially many consumers to receive the information.
However a queue is used to handle the device's text as only one single device will consume messages from this destination.

Each device (identified by an unique identifier +XXX+) running the +Locations+ application will be:

* a _producer_ of messages to the topic +device.XXX.location+
* the only _consumer_ of messages from the queue +device.XXX.text+

Conversely, the Web application will be:

* a _consumer_ of messages from _all_ the topics of the form +device.XXX.location+
* a _producer_ of message to _all_ the queues of the form +device.XXX.text+

[[ch_introduction_stomp_example_message]]
==== +Locations+ Message Representation

There will be two types of exchanged messages:

* one to represent GPS data (exhanged on the topics +device.XXX.location+)
* one to represent orders (exchanged on the queues +device.XXX.text+)

===== Geolocation Messages
The +Locations+ iOS application will send the GPS data using a JSON representation in the message payload:

[[ex_example_gps_data]]
.Geolocation Message Payload
====
----
{
  "deviceID": "BBB",<1>
  "lat": 48.8581,<2>
  "lng": 2.2946,<3>
  "ts": "2013-09-23T08:43Z"<4>
}
----
<1> +deviceID+ is the identifier of the device that sends its position
<2> +lat+ is a number representing the position's _latitude_
<3> +lng+ is a number representing the position's _longitude_
<4> +ts+ is a string representing the time when the position was taken (using the http://en.wikipedia.org/wiki/ISO_8601[ISO 8601] format)
====

===== Text Messages
The text messages that will be consumed by the +Locations+ iOS application will
be represented as a simple plain text string.

[[ex_example_text]]
.Text Message Payload
====
----
"Where are you heading to?"
----
====

A more realistic representation of this message would also contain additional information such the identifier of the headquarter sending the message, etc.
We are using a plain text version as this format is enough to provide a first version.

With the messaging topology and data representation known, we can now refine the +Locations+ application diagram.

[[img_example_app_2]]
.Diagram of the +Locations+ application with its messaging models and representations
image::images/Chapter011/stomp_app_diagram_2.png[Diagram of the Locations application]


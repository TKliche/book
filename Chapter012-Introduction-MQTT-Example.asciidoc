[[ch_introduction_mqtt_example]]
=== +Motions+ Application Using MQTT

Most mobile devices contain sensor that allows to track the device motions (and to a certain extent the motion of its owner). Using additional sensors, we could even imagine having access to the owner's health data (heart bate, diabetes level, etc.). This type of information could be sent to a centralized application that would be able to track the data and extract personal information about them to report to the owner.

We will write a simple application, +Motions+ that follows this model to illustrate the use of MQTT protocol. The iOS application will track the device motion (through its pitch, roll and yaw values) and change its background color to "alert" its user when an alert message is received.
The pending Web application will display the motions of all devices that broadcast them and be able to send alert messages to them:

. In <<ch_mobile_mqtt>>, we will write the +Motions+ iOS application using the MQTT protocol to send data about the device motions and receive alerts.
. In <<ch_web_mqtt>>, we will write a Web application using MQTT protocol over Web Sockets to receive all the device motions data and display them. The Web application will also be able to send alert messages to any devices sending its motions data.

[[img_mqtt_example_app_1]]
.The +Motions+ application with two clients, +AAA+ and +BBB+ and two Web applications monitoring them.
image::images/Chapter012/mqtt_app_diagram_1.png["Diagram of the +Motions+ application"]

[[ch_introduction_mqtt_example_topology]]
==== +Motions+ Messaging Models

In this application we will use two destination with the Publish/Subscribe model:

* +/mwm/XXX/motion+ (where +XXX+ is the device identifier) is the topic to broadcast the device motion data (Publish/Subscribe model)
* +/mwm/XXX/alert+ is the topic to exchange alert messages for a given device (Publish/Subscribe model)

Each device running the +Motions+ application will be:

* a _producer_ of messages to the topic +/mwm/XXX/motion+
* a _consumer_ of messages from the topic +/mwm/XXX/alert+

Conversely, the Web application will be:

* a _consumer_ of messages from all the topics of the form +/mwm/XXX/motion+
* a _producer_ of message to all the topics of the form +/mwm/XXX/alert+

[[ch_introduction_mqtt_example_message]]
==== +Motions+ Message Representation

There will be two types of exchanged messages:

* one to represent device motion data (exhanged on the topics +/mwm/XXX/motion+)
* one to represent alerts (exchanged on the topics +/mwm/XXX/alert+)

===== Device Motion Messages
The +Motions+ iOS application will send the device motions data in a binary message where its payload will be composed of three 64-bit floats representing the device's pitch, roll and yaw values.

[[ex_example_motion_data]]
.Device Motion Message Paylaod
====
----
<< 1.6 -0.1 0.8 >> <1>
----
<1> The message is composed of three 64-bit float for the +pitch+, +roll+, and +yaw+
====

===== Alert Messages
The alert messages that will be consumed by the +Motions+ iOS application will
be represented as a simple plain text string corresponding to a color. The +Motions+ application will use this payload to change temporarily its background color to _alert_ the user.

[[ex_example_alert_data]]
.Alert Message Payload
====
----
"red" <1>
----
<1> The message is composed of a string containing the name of a simple color.
====

With the messaging topology and data representation known, we can now refine the +Motions+ application diagram.

[[img_mqtt_example_app_2]]
.Diagram of the +Motions+ application with its messaging models and representations.
image::images/Chapter012/mqtt_app_diagram_2.png[Diagram of the Motions application]
